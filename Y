local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local selectedLanguage = nil

local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "LanguageSelector"

local langFrame = Instance.new("Frame")
langFrame.Size = UDim2.new(0, 400, 0, 220)
langFrame.Position = UDim2.new(0.5, -200, 0.5, -110)
langFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
langFrame.BorderSizePixel = 0
langFrame.Parent = gui

local langCorner = Instance.new("UICorner")
langCorner.CornerRadius = UDim.new(0, 15)
langCorner.Parent = langFrame

local langStroke = Instance.new("UIStroke")
langStroke.Color = Color3.fromRGB(80, 80, 100)
langStroke.Thickness = 2
langStroke.Parent = langFrame

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 60)
title.Position = UDim2.new(0, 0, 0, 20)
title.BackgroundTransparency = 1
title.Text = "Select Language"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 22
title.TextXAlignment = Enum.TextXAlignment.Center
title.Parent = langFrame

local subtitle = Instance.new("TextLabel")
subtitle.Size = UDim2.new(1, 0, 0, 30)
subtitle.Position = UDim2.new(0, 0, 0, 70)
subtitle.BackgroundTransparency = 1
subtitle.Text = "اختار لغتك المفضلة"
subtitle.TextColor3 = Color3.fromRGB(180, 180, 180)
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 14
subtitle.TextXAlignment = Enum.TextXAlignment.Center
subtitle.Parent = langFrame

local englishBtn = Instance.new("TextButton")
englishBtn.Size = UDim2.new(0, 160, 0, 50)
englishBtn.Position = UDim2.new(0, 40, 0, 120)
englishBtn.Text = "🇺🇸 English"
englishBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
englishBtn.TextColor3 = Color3.new(1, 1, 1)
englishBtn.Font = Enum.Font.GothamBold
englishBtn.TextSize = 16
englishBtn.BorderSizePixel = 0
englishBtn.Parent = langFrame

local englishCorner = Instance.new("UICorner")
englishCorner.CornerRadius = UDim.new(0, 10)
englishCorner.Parent = englishBtn

local englishStroke = Instance.new("UIStroke")
englishStroke.Color = Color3.fromRGB(100, 150, 200)
englishStroke.Thickness = 1
englishStroke.Parent = englishBtn

local arabicBtn = Instance.new("TextButton")
arabicBtn.Size = UDim2.new(0, 160, 0, 50)
arabicBtn.Position = UDim2.new(0, 200, 0, 120)
arabicBtn.Text = "🇸🇦 العربية"
arabicBtn.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
arabicBtn.TextColor3 = Color3.new(1, 1, 1)
arabicBtn.Font = Enum.Font.GothamBold
arabicBtn.TextSize = 16
arabicBtn.BorderSizePixel = 0
arabicBtn.Parent = langFrame

local arabicCorner = Instance.new("UICorner")
arabicCorner.CornerRadius = UDim.new(0, 10)
arabicCorner.Parent = arabicBtn

local arabicStroke = Instance.new("UIStroke")
arabicStroke.Color = Color3.fromRGB(60, 179, 60)
arabicStroke.Thickness = 1
arabicStroke.Parent = arabicBtn

englishBtn.MouseEnter:Connect(function()
englishBtn.BackgroundColor3 = Color3.fromRGB(90, 150, 200)
end)
englishBtn.MouseLeave:Connect(function()
englishBtn.BackgroundColor3 = Color3.fromRGB(70, 130, 180)
end)

arabicBtn.MouseEnter:Connect(function()
arabicBtn.BackgroundColor3 = Color3.fromRGB(54, 159, 54)
end)
arabicBtn.MouseLeave:Connect(function()
arabicBtn.BackgroundColor3 = Color3.fromRGB(34, 139, 34)
end)

local function initScript(lang)
selectedLanguage = lang
gui:Destroy()

local texts = {  
    en = {  
        title = "zYn.scripts",  
        auto = "Auto: OFF",  
        autoOn = "Auto: ON",  
        bombFound = "Bomb: Found ✓",  
        bombNot = "Bomb: Not Found",  
        backBlock = "Backward: Blocked ✗",  
        backAllow = "Backward: Allowed",  
        checks = "Checks: OFF",  
        checksOn = "Checks: ON",  
        range = "Range:"  
    },  
    ar = {  
        title = "zYn.scripts",  
        auto = "اوتو: مطفي",  
        autoOn = "اوتو: مشتغل",  
        bombFound = "قنبله: موجوده ✓",  
        bombNot = "قنبله: مو موجوده",  
        backBlock = "الخلف: ممنوع ✗",  
        backAllow = "الخلف: مسموح",  
        checks = "تخطي: مطفي",  
        checksOn = "تخطي: مشتغل",  
        range = "المسافة:"  
    }  
}  
local t = texts[lang]  

local RunService = game:GetService("RunService")  
local UserInputService = game:GetService("UserInputService")  
local Workspace = workspace  

local Character, HRP, Humanoid = LocalPlayer.Character, nil, nil  
local enabled, checksEnabled = false, false  
local cfSpeed, rotateSpeed = 18, 0  
local detectionRange = 6  
local dragging, dragInput, dragStart, startPos  
local movementConnection, backwardBlockConnection  
local isBackwardBlocked = false  

local function setupChar()  
    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()  
    HRP = Character:WaitForChild("HumanoidRootPart")  
    Humanoid = Character:WaitForChild("Humanoid")  
end  
setupChar()  

local function hasBomb()  
    local bp = LocalPlayer:FindFirstChild("Backpack")  
    if bp then  
        for _, item in pairs(bp:GetChildren()) do  
            if item:IsA("Tool") and (string.find(string.lower(item.Name), "bomb") or string.find(string.lower(item.Name), "grenade")) then  
                return true  
            end  
        end  
    end  
    if Character then  
        for _, item in pairs(Character:GetChildren()) do  
            if item:IsA("Tool") and (string.find(string.lower(item.Name), "bomb") or string.find(string.lower(item.Name), "grenade")) then  
                return true  
            end  
        end  
    end  
    return false  
end  

local function getNearest()  
    local nearest, dist = nil, math.huge  
    for _, plr in pairs(Players:GetPlayers()) do  
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then  
            local humanoid = plr.Character:FindFirstChild("Humanoid")  
            local d = (HRP.Position - plr.Character.HumanoidRootPart.Position).Magnitude  
            if d > detectionRange then continue end  
            if checksEnabled then  
                if humanoid and humanoid.Health <= 0 then continue end  
                local rayParams = RaycastParams.new()  
                rayParams.FilterType = Enum.RaycastFilterType.Blacklist  
                rayParams.FilterDescendantsInstances = {Character}  
                local result = Workspace:Raycast(HRP.Position, (plr.Character.HumanoidRootPart.Position - HRP.Position), rayParams)  
                if result and result.Instance and not result.Instance:IsDescendantOf(plr.Character) then continue end  
            end  
            if d < dist then  
                dist, nearest = d, plr  
            end  
        end  
    end  
    return nearest  
end  

local mainGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))  
local mainFrame = Instance.new("Frame")  
mainFrame.Size = UDim2.new(0, 170, 0, 130)  
mainFrame.Position = UDim2.new(0.4, 0, 0.8, 0)  
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)  
mainFrame.BorderSizePixel = 0  
mainFrame.Active = true  
mainFrame.Selectable = true  
mainFrame.Parent = mainGui  

local frameCorner = Instance.new("UICorner")  
frameCorner.CornerRadius = UDim.new(0, 12)  
frameCorner.Parent = mainFrame  

local frameStroke = Instance.new("UIStroke")  
frameStroke.Color = Color3.fromRGB(70, 70, 70)  
frameStroke.Thickness = 2  
frameStroke.Parent = mainFrame  

local autoBtn = Instance.new("TextButton")  
autoBtn.Size = UDim2.new(1, -10, 0, 30)  
autoBtn.Position = UDim2.new(0, 5, 0, 5)  
autoBtn.Text = t.auto  
autoBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)  
autoBtn.TextColor3 = Color3.new(1, 1, 1)  
autoBtn.Font = Enum.Font.GothamBold  
autoBtn.TextSize = 14  
autoBtn.BorderSizePixel = 0  
autoBtn.Parent = mainFrame  

local autoBtnCorner = Instance.new("UICorner")  
autoBtnCorner.CornerRadius = UDim.new(0, 6)  
autoBtnCorner.Parent = autoBtn  

local bombLabel = Instance.new("TextLabel")  
bombLabel.Size = UDim2.new(1, -10, 0, 15)  
bombLabel.Position = UDim2.new(0, 5, 0, 38)  
bombLabel.Text = t.bombNot  
bombLabel.BackgroundTransparency = 1  
bombLabel.TextColor3 = Color3.fromRGB(255, 100, 100)  
bombLabel.Font = Enum.Font.Gotham  
bombLabel.TextSize = 10  
bombLabel.TextXAlignment = Enum.TextXAlignment.Center  
bombLabel.Parent = mainFrame  

local backLabel = Instance.new("TextLabel")  
backLabel.Size = UDim2.new(1, -10, 0, 15)  
backLabel.Position = UDim2.new(0, 5, 0, 55)  
backLabel.Text = t.backAllow  
backLabel.BackgroundTransparency = 1  
backLabel.TextColor3 = Color3.fromRGB(150, 150, 150)  
backLabel.Font = Enum.Font.Gotham  
backLabel.TextSize = 10  
backLabel.TextXAlignment = Enum.TextXAlignment.Center  
backLabel.Parent = mainFrame  

local checkBtn = Instance.new("TextButton")  
checkBtn.Size = UDim2.new(1, -10, 0, 22)  
checkBtn.Position = UDim2.new(0, 5, 0, 75)  
checkBtn.Text = t.checks  
checkBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)  
checkBtn.TextColor3 = Color3.new(1, 1, 1)  
checkBtn.Font = Enum.Font.GothamBold  
checkBtn.TextSize = 10  
checkBtn.BorderSizePixel = 0  
checkBtn.Parent = mainFrame  

local checkBtnCorner = Instance.new("UICorner")  
checkBtnCorner.CornerRadius = UDim.new(0, 6)  
checkBtnCorner.Parent = checkBtn  

local rangeLabel = Instance.new("TextLabel")  
rangeLabel.Size = UDim2.new(0, 45, 0, 20)  
rangeLabel.Position = UDim2.new(0, 5, 0, 102)  
rangeLabel.Text = t.range  
rangeLabel.BackgroundTransparency = 1  
rangeLabel.TextColor3 = Color3.fromRGB(200, 200, 200)  
rangeLabel.Font = Enum.Font.Gotham  
rangeLabel.TextSize = 9  
rangeLabel.TextXAlignment = Enum.TextXAlignment.Left  
rangeLabel.Parent = mainFrame  

local rangeInput = Instance.new("TextBox")  
rangeInput.Size = UDim2.new(0, 115, 0, 20)  
rangeInput.Position = UDim2.new(0, 50, 0, 102)  
rangeInput.Text = tostring(detectionRange)  
rangeInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)  
rangeInput.TextColor3 = Color3.new(1, 1, 1)  
rangeInput.Font = Enum.Font.Gotham  
rangeInput.TextSize = 10  
rangeInput.BorderSizePixel = 0  
rangeInput.PlaceholderText = "6"  
rangeInput.TextXAlignment = Enum.TextXAlignment.Center  
rangeInput.Parent = mainFrame  

local rangeInputCorner = Instance.new("UICorner")  
rangeInputCorner.CornerRadius = UDim.new(0, 4)  
rangeInputCorner.Parent = rangeInput  

local titleLbl = Instance.new("TextLabel")  
titleLbl.Size = UDim2.new(1, 0, 0, 20)  
titleLbl.Position = UDim2.new(0, 0, 0, -25)  
titleLbl.Text = t.title  
titleLbl.BackgroundTransparency = 1  
titleLbl.TextColor3 = Color3.new(1, 1, 1)  
titleLbl.Font = Enum.Font.GothamBold  
titleLbl.TextSize = 12  
titleLbl.TextXAlignment = Enum.TextXAlignment.Center  
titleLbl.Parent = mainFrame  

local function updateDrag(input)  
    if input == dragInput and dragging then  
        local delta = input.Position - dragStart  
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)  
    end  
end  

mainFrame.InputBegan:Connect(function(input)  
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then  
        dragging = true  
        dragStart = input.Position  
        startPos = mainFrame.Position  
        local conn  
        conn = input.Changed:Connect(function()  
            if input.UserInputState == Enum.UserInputState.End then  
                dragging = false  
                conn:Disconnect()  
            end  
        end)  
    end  
end)  

mainFrame.InputChanged:Connect(function(input)  
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then  
        dragInput = input  
    end  
end)  

UserInputService.InputChanged:Connect(updateDrag)  

local function startBackwardBlock()  
    if backwardBlockConnection then return end  
    backwardBlockConnection = RunService.Heartbeat:Connect(function()  
        if enabled and hasBomb() and Humanoid and HRP then  
            local moveVector = Humanoid.MoveDirection  
            if moveVector.Magnitude > 0 then  
                local dotProduct = HRP.CFrame.LookVector:Dot(moveVector.Unit)  
                if dotProduct < -0.1 then  
                    local sideways = moveVector.Unit:Dot(HRP.CFrame.RightVector)  
                    if math.abs(sideways) > 0.1 then  
                        Humanoid:Move(HRP.CFrame.RightVector * sideways, false)  
                    else  
                        Humanoid:Move(Vector3.new(0, 0, 0), false)  
                    end  
                end  
            end  
        end  
    end)  
end  

local function stopBackwardBlock()  
    if backwardBlockConnection then  
        backwardBlockConnection:Disconnect()  
        backwardBlockConnection = nil  
    end  
end  

local function updateStatus()  
    local hasBombCheck = hasBomb()  
    bombLabel.Text = hasBombCheck and t.bombFound or t.bombNot  
    bombLabel.TextColor3 = hasBombCheck and Color3.fromRGB(100, 255, 100) or Color3.fromRGB(255, 100, 100)  
    local shouldBlock = enabled and hasBombCheck  
    if shouldBlock then  
        backLabel.Text = t.backBlock  
        backLabel.TextColor3 = Color3.fromRGB(255, 100, 100)  
        if not isBackwardBlocked then  
            startBackwardBlock()  
            isBackwardBlocked = true  
        end  
    else  
        backLabel.Text = t.backAllow  
        backLabel.TextColor3 = Color3.fromRGB(150, 150, 150)  
        if isBackwardBlocked then  
            stopBackwardBlock()  
            isBackwardBlocked = false  
        end  
    end  
    return hasBombCheck  
end  

local function startMovement()  
    if movementConnection then return end  
    movementConnection = RunService.Heartbeat:Connect(function(dt)  
        if enabled and HRP and Humanoid then  
            if not updateStatus() then  
                Humanoid.WalkSpeed = 16  
                Humanoid:MoveTo(HRP.Position)  
                return  
            end  

            local target = getNearest()  
            if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then  
                local targetPos = target.Character.HumanoidRootPart.Position  
                local currentPos = HRP.Position  
                local distance = (targetPos - currentPos).Magnitude  
                local direction = (Vector3.new(targetPos.X, currentPos.Y, targetPos.Z) - currentPos).Unit  

                if distance > 2 then  
                    local newPos = currentPos + (direction * cfSpeed * dt)  
                    newPos = Vector3.new(newPos.X, currentPos.Y, newPos.Z)  
                    local lookDir = (targetPos - newPos).Unit  
                    HRP.CFrame = CFrame.new(newPos, newPos + Vector3.new(lookDir.X, 0, lookDir.Z))  
                    Humanoid.WalkSpeed = cfSpeed  
                    Humanoid:MoveTo(targetPos)  
                else  
                    Humanoid.WalkSpeed = cfSpeed / 2  
                    Humanoid:MoveTo(targetPos)  
                end  
            else  
                Humanoid.WalkSpeed = 16  
                Humanoid:MoveTo(HRP.Position)  
            end  
        else  
            updateStatus()  
        end  
    end)  
end  

local function stopMovement()  
    if movementConnection then  
        movementConnection:Disconnect()  
        movementConnection = nil  
    end  
    if Humanoid then  
        Humanoid.WalkSpeed = 16  
        Humanoid:MoveTo(HRP.Position)  
    end  
end  

autoBtn.MouseButton1Click:Connect(function()  
    enabled = not enabled  
    autoBtn.Text = enabled and t.autoOn or t.auto  
    autoBtn.BackgroundColor3 = enabled and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(40, 40, 40)  
    updateStatus()  
    if enabled then startMovement() else stopMovement() end  
end)  

checkBtn.MouseButton1Click:Connect(function()  
    checksEnabled = not checksEnabled  
    checkBtn.Text = checksEnabled and t.checksOn or t.checks  
    checkBtn.BackgroundColor3 = checksEnabled and Color3.fromRGB(0, 120, 200) or Color3.fromRGB(40, 40, 40)  
end)  

rangeInput.FocusLost:Connect(function()  
    local newRange = tonumber(rangeInput.Text)  
    if newRange and newRange > 0 and newRange <= 1000 then  
        detectionRange = newRange  
    else  
        rangeInput.Text = tostring(detectionRange)  
    end  
end)  

LocalPlayer.CharacterAdded:Connect(function(char)  
    stopMovement()  
    stopBackwardBlock()  
    isBackwardBlocked = false  
    setupChar()  
    wait(1)  
    updateStatus()  
    if enabled then  
        startMovement()  
    end  
end)  

spawn(function()  
    while wait(2) do  
        if not enabled then updateStatus() end  
    end  
end)  

updateStatus()  
startMovement()

end

englishBtn.MouseButton1Click:Connect(function() initScript("en") end)
arabicBtn.MouseButton1Click:Connect(function() initScript("ar") end)
